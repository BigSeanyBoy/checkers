from checkers_api import *

def king_then_capture():
    ba = [99, 99,  99, 99, 99, 99, 99, 99, 99, 99,
                   99, 0,   0,  0,  0,  -2,  0,  0,  0,  99, 
                   99, 0,  0,  0,  0,  0,  -1,  0,  0,  99,
                   99, 0,   0,  0,  0,  0,  0,  0,  0,  99,
                   99, 0,   1,  0,  0,  0,  0,  0,  0,  99,
                   99, 0,   0,  0,  0,  0,  0,  0,  0,  99,
                   99, 0,   0,  0,  0,  0,  0,  0,  0,  99,
                   99, 0,   0,  0,  0,  0,  0,  0,  0,  99,
                   99, 0,   0,  0,  0,  0,  0,  0,  0,  99,
                   99, 99,  99, 99, 99, 99, 99, 99, 99, 99]
    p = [[], []]
    for i in range(len(ba)):
        if ba[i] != 99:
            if ba[i] > 0:
                p[0].append([i, ba[i]])
            elif ba[i] < 0:
                p[1].append([i, ba[i]])
    board = Board(board_array=ba, pieces=p, whose_turn=0)
    return board
              
def no_pieces():
    ba = [99, 99,  99, 99, 99, 99, 99, 99, 99, 99,
          99, 1,   0,  0,  0,  0,  0,  0,  0,  99,
          99, 0,   0,  0,  0,  0,  0,  0,  0,  99,
          99, 0,   0,  0,  0,  0,  0,  0,  0,  99,
          99, 0,   0,  0,  -1,  0,  0,  0,  0,  99,
          99, 0,   0,  0,  0,  0,  0,  0,  0,  99,
          99, 0,   0,  0,  0,  0,  0,  0,  0,  99,
          99, 0,   0,  0,  0,  0,  0,  0,  0,  99,
          99, 0,   0,  0,  0,  0,  0,  0,  0,  99,
          99, 99,  99, 99, 99, 99, 99, 99, 99, 99]
    p = [[], []]
    for i in range(len(ba)):
        if ba[i] != 99:
            if ba[i] > 0:
                p[0].append([i, ba[i]])
            elif ba[i] < 0:
                p[1].append([i, ba[i]])
    board = Board(board_array=ba, pieces=p, whose_turn=1)
    return board

def sean():
    ba = [99, 99,  99, 99, 99, 99, 99, 99, 99, 99,
          99, -2,   0,  0,  0,  0,  0,  0,  0,  99,
          99, 0,   0,  0,  0,  0,  0,  0,  0,  99,
          99, 1,   0,  0,  0,  0,  0,  0,  0,  99,
          99, 0,   0,  0,  0,  0,  0,  0,  0,  99,
          99, 0,   0,  0,  0,  2,  0,  0,  0,  99,
          99, 0,   0,  0,  0,  0,  0,  0,  0,  99,
          99, -1,   0,  0,  0,  0,  0,  0,  0,  99,
          99, 0,   0,  0,  0,  0,  0,  0,  0,  99,
          99, 99,  99, 99, 99, 99, 99, 99, 99, 99]
    p = [[], []]
    for i in range(len(ba)):
        if ba[i] != 99:
            if ba[i] > 0:
                p[0].append([i, ba[i]])
            elif ba[i] < 0:
                p[1].append([i, ba[i]])
    board = Board(board_array=ba, pieces=p, whose_turn=1)
    return board

